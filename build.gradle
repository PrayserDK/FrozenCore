plugins {
    id 'java'
    id("maven-publish")
}

compileJava {
    options.compilerArgs << '-parameters'
    options.encoding = 'utf-8'
}

group = 'dk.prayser'
version = '1.0'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        url = "https://maven.enginehub.org/repo/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url 'https://jitpack.io'
    }
    maven {
        url 'https://repo.pyr.lol/snapshots'
        name = "pyr-snapshots"
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.8.8-R0.1-SNAPSHOT"
    compileOnly 'org.jetbrains:annotations:24.0.1'

    compileOnly 'me.clip:placeholderapi:2.11.5'
    compileOnly 'com.sk89q.worldguard:worldguard-legacy:6.2'
    compileOnly "com.github.MilkBowl:VaultAPI:1.7"

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = 'dk.prayser'
            artifactId = project.name.toLowerCase()
            version = '1.0'
        }
    }
}
